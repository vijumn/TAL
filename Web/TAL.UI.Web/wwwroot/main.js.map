{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/home/home.component.html","webpack:///./ClientApp/app/home/home.component.ts","webpack:///./ClientApp/app/nav-menu/nav-menu.component.css","webpack:///./ClientApp/app/nav-menu/nav-menu.component.html","webpack:///./ClientApp/app/nav-menu/nav-menu.component.ts","webpack:///./ClientApp/app/premium-calculator/calculator.component.html","webpack:///./ClientApp/app/premium-calculator/calculator.component.ts","webpack:///./ClientApp/app/services/data.service.ts","webpack:///./ClientApp/app/services/premium-calculator.service.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CalculatorComponent } from './premium-calculator/calculator.component';\r\nimport { PremiumCalculatorService } from './services/premium-calculator.service';\r\nimport { DataService } from './services/data.service';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CalculatorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: CalculatorComponent, pathMatch: 'full'  },\r\n      { path: 'home', component: HomeComponent },\r\n    ])\r\n  ],\r\n  providers: [PremiumCalculatorService, DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]='[\\\"/\\\"]'>TAL</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\" [ngClass]='{\\\"show\\\": isExpanded}'>\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n            <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]'>\\r\\n                <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/\\\"]'>Premium Calculator</a>\\r\\n              </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]='[\\\"link-active\\\"]' [routerLinkActiveOptions]='{ exact: true }'>\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]='[\\\"/home\\\"]'>Home</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","module.exports = \"<h2>Premium Calculator</h2>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <form  (ngSubmit)=\\\"onSubmit(form)\\\" #premiumForm=\\\"ngForm\\\" >\\r\\n        <div class=\\\"row form-group col-6\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"name\\\">Name:</label>\\r\\n                    <input [(ngModel)]=\\\"membermodel.name\\\"  #name=\\\"ngModel\\\" type=\\\"text\\\"class=\\\"form-control\\\" autocomplete=\\\"off\\\" autofocus=\\\"autofocus\\\" required id=\\\"name\\\" name=\\\"name\\\"  />\\r\\n                    <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"    class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"name.errors.required\\\">Name is required.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n            <div class=\\\" row form-group col-6\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"age\\\">Age:</label>\\r\\n                    <input [(ngModel)]=\\\"membermodel.age\\\" #age=\\\"ngModel\\\" type=\\\"number\\\" class=\\\"form-control\\\"autocomplete=\\\"off\\\" required pattern=\\\"[0-9]{1,3}\\\" id=\\\"age\\\" name=\\\"age\\\" />\\r\\n                    <div *ngIf=\\\"age.invalid && (age.dirty || age.touched)\\\"    class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"age.errors.required\\\">Age is required.</div>\\r\\n                 </div>\\r\\n             </div>\\r\\n            <div class=\\\"row form-group col-6\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"dateofbirth\\\">Date of Birth:</label>\\r\\n                 <input [(ngModel)]=\\\"membermodel.dateOfBirth\\\" #dateofbirth =\\\"ngModel\\\" type=\\\"date\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" required id=\\\"dateOfBirth\\\" name=\\\"dateOfBirth\\\" />\\r\\n                 <div *ngIf=\\\"dateofbirth.invalid && (dateofbirth.dirty || dateofbirth.touched)\\\"    class=\\\"alert alert-danger\\\">\\r\\n                   <div *ngIf=\\\"dateofbirth.errors.required\\\">Date of Birth is required.</div>\\r\\n            </div>\\r\\n            </div>\\r\\n            <div class=\\\"row form-group col-6\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"deathSumInsured\\\">Death–Sum Insured:</label>\\r\\n                    <input [(ngModel)]=\\\"membermodel.deathSumInsured\\\" #deathsuminsured=\\\"ngModel\\\" type=\\\"number\\\" step=\\\"1000\\\" min=\\\"1\\\"  class=\\\"form-control\\\" autocomplete=\\\"off\\\" required id=\\\"deathSumInsured\\\" name=\\\"deathSumInsured\\\" />\\r\\n                    <div *ngIf=\\\"deathsuminsured.invalid && (deathsuminsured.dirty || deathsuminsured.touched)\\\"    class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"deathsuminsured.errors.required\\\">Death-Sum Insured is required.</div>\\r\\n            </div>\\r\\n           </div>\\r\\n            <div class=\\\"row form-group col-6\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"occupation\\\">Occupation:</label>\\r\\n                   <select  class=\\\"form-control\\\" name=\\\"occupationId\\\" [ngModel]=\\\"membermodel.occupationId\\\" (ngModelChange)=\\\"submit($event)\\\"  > \\r\\n                        <option *ngFor=\\\"let occupation of membermodel.occupationList\\\" [value]=\\\"occupation.occupationId\\\">{{occupation.name}}</option> \\r\\n                    </select> \\r\\n                \\r\\n            </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n<div *ngIf=\\\"membermodel.premium > 0\\\">\\r\\n    <h3>Calculated Premium</h3>\\r\\n    <div class=\\\"row form-group col-6\\\">\\r\\n        {{membermodel.premium |currency:'AUD':'symbol'}}\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { PremiumCalculatorService } from '../services/premium-calculator.service';\r\nimport { IPremium, IOccupation, IMember } from '../model/premium';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html'\r\n})\r\nexport class CalculatorComponent implements OnInit  {\r\n  @ViewChild(NgForm) premiumForm: NgForm;\r\n\r\n  premium: IPremium = {\r\n    name: '',\r\n    age: 0,\r\n    dateOfBirth: new Date(),\r\n    deathSumInsured: 0,\r\n    occupationId: 0,\r\n    premium: 0,\r\n  };\r\n  errorReceived: boolean;\r\n  occupationList: IOccupation[];\r\n  membermodel: IMember = {\r\n    name: '',\r\n    age: undefined,\r\n    dateOfBirth: new Date(),\r\n    deathSumInsured: undefined,\r\n    occupationList: [],\r\n    occupationId: undefined,\r\n    premium: undefined,\r\n  };\r\n\r\n  constructor(private service: PremiumCalculatorService) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.getOccupationList();\r\n  }\r\n\r\n  getOccupationList() {\r\n    this.errorReceived = false;\r\n    this.service.getOccupationList()\r\n        .pipe(catchError((err) => this.handleError(err)))\r\n        .subscribe(occlist => {\r\n            this.membermodel.occupationList = occlist;\r\n            console.log('occupation types received: ' + occlist.length);\r\n    });\r\n  }\r\n\r\n  calculatePremium() {\r\n    this.errorReceived = false;\r\n    this.service.calculatePremium(this.premium)\r\n        .pipe(catchError((err) => this.handleError(err)))\r\n        .subscribe(premium => {\r\n            this.premium = premium;\r\n            this.membermodel.premium = premium.premium;\r\n    });\r\n  }\r\n\r\n  submit(value){\r\n    this.membermodel.occupationId = value;\r\n    if (!this.premiumForm.valid) {\r\n    return;\r\n   }\r\n    Object.keys(this.premium).forEach(key =>\r\n      this.premium[key] = this.membermodel[key]\r\n    );\r\n    this.calculatePremium();\r\n  }\r\n    private handleError(error: any) {\r\n      this.errorReceived = true;\r\n      return Observable.throw(error);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable, throwError } from 'rxjs';\nimport {  map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class DataService {\n    constructor(private http: HttpClient) { }\n\n    get(url: string, params?: any): Observable<Response> {\n        let options = { };\n        this.setHeaders(options);\n        return this.http.get(url, options)\n            .pipe(\n                map((res: Response) => {\n                    return res;\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    postWithId(url: string, data: any, params?: any): Observable<Response> {\n        return this.doPost(url, data, true, params);\n    }\n\n    post(url: string, data: any, params?: any): Observable<Response> {\n        return this.doPost(url, data, false, params);\n    }\n\n    putWithId(url: string, data: any, params?: any): Observable<Response> {\n        return this.doPut(url, data, true, params);\n    }\n\n    private doPost(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\n        let options = { };\n        this.setHeaders(options, needId);\n\n        return this.http.post(url, data, options)\n            .pipe(\n                map((res: Response) => {\n                    return res;\n                }),\n                catchError(this.handleError)\n            );\n    }\n    \n    delete(url: string, params?: any) {\n        let options = { };\n        this.setHeaders(options);\n\n        console.log('data.service deleting');\n\n        this.http.delete(url, options)\n            .subscribe((res) => {console.log('deleted');\n        });\n    }\n\n    private handleError(error: any) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('Client side network error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error('Backend - ' +\n                `status: ${error.status}, ` +\n                `statusText: ${error.statusText}, ` +\n                `message: ${error.error.message}`);\n        }\n\n        // return an observable with a user-facing error message\n        return throwError(error || 'server error');\n    }\n\n    private doPut(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\n        let options = { };\n        this.setHeaders(options, needId);\n       \n        return this.http.put(url, data, options)\n            .pipe(\n                map((res: Response) => {\n                    return res;\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    private setHeaders(options: any, needId?: boolean){\n            options[\"headers\"] = new HttpHeaders()\n                .append('content-type', 'application/json');\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\n\r\nimport { DataService } from './data.service';\r\nimport { IOccupation, IPremium } from '../model/premium';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PremiumCalculatorService {\r\n  private occupationUrl = '';\r\n  private premiumUrl = '';\r\n  \r\n  constructor(private service: DataService, @Inject('BASE_URL') baseUrl: string) {\r\n   this.occupationUrl = baseUrl + 'api/v1/occupation';\r\n   this.premiumUrl = baseUrl + 'api/v1/premium';\r\n  }\r\n\r\n  getOccupationList(): Observable<IOccupation[]> {\r\n        let url = this.occupationUrl + '/types';\r\n        return this.service.get(url).pipe(map((response: Response) => {\r\n            return response;\r\n        }));\r\n  }\r\n\r\ncalculatePremium(premium): Observable<IPremium> {\r\n  let url = this.premiumUrl + '/Calculate';\r\n  return this.service.post(url, premium).pipe(map((response: Response) => {\r\n    return response;\r\n  }));\r\n}\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}